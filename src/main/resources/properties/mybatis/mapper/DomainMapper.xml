<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="otg.dao.DomainMapper">
  <resultMap id="BaseResultMap" type="otg.bean.Domain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    <id column="domain_id" jdbcType="INTEGER" property="domainId" />
    <result column="domain_code" jdbcType="VARCHAR" property="domainCode" />
    <result column="domain_name" jdbcType="VARCHAR" property="domainName" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    domain_id, domain_code, domain_name, add_date, update_date
  </sql>
  <select id="selectByExample" parameterType="otg.bean.DomainExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from domain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from domain
    where domain_id = #{domainId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    delete from domain
    where domain_id = #{domainId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="otg.bean.DomainExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    delete from domain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="otg.bean.Domain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    insert into domain (domain_id, domain_code, domain_name, 
      add_date, update_date)
    values (#{domainId,jdbcType=INTEGER}, #{domainCode,jdbcType=VARCHAR}, #{domainName,jdbcType=VARCHAR}, 
      #{addDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="otg.bean.Domain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    insert into domain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="domainId != null">
        domain_id,
      </if>
      <if test="domainCode != null">
        domain_code,
      </if>
      <if test="domainName != null">
        domain_name,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="domainId != null">
        #{domainId,jdbcType=INTEGER},
      </if>
      <if test="domainCode != null">
        #{domainCode,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null">
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="otg.bean.DomainExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    select count(*) from domain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    update domain
    <set>
      <if test="record.domainId != null">
        domain_id = #{record.domainId,jdbcType=INTEGER},
      </if>
      <if test="record.domainCode != null">
        domain_code = #{record.domainCode,jdbcType=VARCHAR},
      </if>
      <if test="record.domainName != null">
        domain_name = #{record.domainName,jdbcType=VARCHAR},
      </if>
      <if test="record.addDate != null">
        add_date = #{record.addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    update domain
    set domain_id = #{record.domainId,jdbcType=INTEGER},
      domain_code = #{record.domainCode,jdbcType=VARCHAR},
      domain_name = #{record.domainName,jdbcType=VARCHAR},
      add_date = #{record.addDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="otg.bean.Domain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    update domain
    <set>
      <if test="domainCode != null">
        domain_code = #{domainCode,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null">
        domain_name = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where domain_id = #{domainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="otg.bean.Domain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 22:15:09 CST 2019.
    -->
    update domain
    set domain_code = #{domainCode,jdbcType=VARCHAR},
      domain_name = #{domainName,jdbcType=VARCHAR},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where domain_id = #{domainId,jdbcType=INTEGER}
  </update>
	<cache eviction="" flushInterval="" readOnly="" size="" type="" />
	<resultMap id="domainMap" type="otg.bean.Domain">
		<id column="domainid" property="domainid" />
		<result column="domaincode" property="domaincode" />
		<result column="domainname" property="domainname" />
		<result column="adddate" property="adddate" />
		<result column="updatedate" property="updatedate" />
	</resultMap>
	
	<resultMap id="domainMapWithProvience" type="otg.bean.Domain">
		<id column="domain_id" property="domainId" />
		<result column="domain_code" property="domainCode" />
		<result column="domain_name" property="domainName" />
		<result column="d_add_date" property="addDate" />
		<result column="d_update_date" property="updateDate" />
		<collection ofType="otg.bean.Provience" property="proviences">
			<id column="provience_id" property="provienceId" />
			<result column="provience_code" property="provienceCode" />
			<result column="provience_name" property="provienceName" />
			<result column="p_add_date" property="addDate" />
			<result column="p_update_date" property="updateDate" />
		</collection>
	</resultMap>
	
	
	<resultMap id="domainMapWithProvienceStep" type="otg.bean.Domain">
		<id column="domain_id" property="domainId" />
		<result column="domain_code" property="domainCode" />
		<result column="domain_name" property="domainName" />
		<result column="d_add_date" property="addDate" />
		<result column="d_update_date" property="updateDate" />
		<collection column="{domainId=domain_id}" fetchType="lazy" property="proviences" select="otg.dao.base.ProvienceMapper.getProvienceWithDomainId">
		</collection>
	</resultMap>
	
	<select id="searchDomainById" resultMap="domainMap">
		select domainid,domaincode,domainname,adddate,updatedate from domain where domainid=#{id}
	</select>
	
	<select id="searchDomain" resultMap="domainMap">
		select domainid,domaincode,domainname,adddate,updatedate from domain where domainid=#{domainid}
	</select>
	
	<select id="searchDomainByDomainCodeOrDomainName" resultMap="domainMap">
		select domainid,domaincode,domainname,adddate,updatedate from domain where domaincode=#{domaincode} or domainname=#{domainname}
	</select>
	
	<select id="searchDomainByMap" resultMap="domainMap">
		select domainid,domaincode,domainname,adddate,updatedate from domain where domaincode=#{domaincode} or domainname=#{domainname}
	</select>
	
	<insert databaseId="mysql" id="insertDomain" parameterMap="otg.bean.Domain">
		insert into domain(domaincode,domainname,adddate,updatedate)
		values(#{domaincode},#{domainname},#{adddate},#{updatedate})
	</insert>
	
	<insert databaseId="oracle" id="insertDomain" parameterMap="otg.bean.Domain">
		<selectKey keyProperty="domainid" order="BEFORE" resultType="Integer">
			select DOMAIN_SEQ.nextval from dual
		</selectKey>
		insert into domain(domainid,domaincode,domainname,adddate,updatedate)
		values(#{domainid},#{domaincode},#{domainname},#{adddate},#{updatedate})
	</insert>
	
	<!-- &lt;insert id="insertDomain" parameterMap="otg.bean.Domain"
	keyProperty="domainid" databaseId="oracle"&gt;
		&lt;selectKey keyProperty="domainid" order="AFTER" resultType="Integer"&gt;
			select DOMAIN_SEQ.currval from dual
		&lt;/selectKey&gt;
		insert into domain(domainid,domaincode,domainname,adddate,updatedate)
		values(DOMAIN_SEQ.nextval,#{domaincode},#{domainname},#{adddate},#{updatedate})
	&lt;/insert&gt; -->
	
	<update id="insertDomain" parameterMap="otg.bean.Domain">
		update domain
		set domaincode=#{domaincode},domainname=#{domainname},adddate=#{adddate},updatedate=#{updatedate}
		where domainid=#{domainid}
	</update>
	
	<delete id="deleteDomainById">
		delete from domain where domainid=#{id}
	</delete>
	
	<select id="getDomainsByDomainName" resultMap="domainMap">
		select domainid,domaincode,domainname,adddate,updatedate from domain where domainname like #{domainname}
	</select>
	
	<select id="getDomainReturnMap" resultType="map">
		select domainid,domaincode,domainname,adddate,updatedate from domain where domaincode = #{domaincode}
	</select>
	
	<select id="getDomainsByDomainNameReturnMap" resultType="map">
		select domainid,domaincode,domainname,adddate,updatedate where domainname like #{domainname}
	</select>
	
	<select id="searchDomainWithProvience" resultMap="domainMapWithProvience">
		select domain_id,domain_code,domain_name,domain.add_date d_add_date,
		domain.update_date d_update_date
		provience_id,provience_code,provience_name,
		provience.add_date p_add_date,provience.update_date p_update_date
		from domain,provience
		where domain.domain_id=provience.domain_id
		and domain.domain_id=#{domainId}
	</select>
	
	
	<select id="searchDomainWithProvienceStep" resultMap="domainMapWithProvienceStep">
		select domain_id,domain_code,domain_name,domain.add_date d_add_date,
		domain.update_date d_update_date
		provience_id,provience_code,provience_name,
		provience.add_date p_add_date,provience.update_date p_update_date
		from domain,provience
		where domain.domain_id=provience.domain_id
		and domain.domain_id=#{domainId}
	</select>
	
	<select id="searchDomainByConditionIf" resultType="otg.bean.Domain">
		select * from domain
		<where>
			<if test="domainId!=null">
				domain_id=#{domainId}
			</if>
			<if test="domainCode!=null and domainCode.trim()!=&quot;&quot;">
				and domain_code=#{domainCode}
			</if>
			<if test="domainName!=null and domainName.trim()!=&quot;&quot;">
				and domain_name like #{domainName}
			</if>
			<if test="addDate!=null">
				and add_date = #{addDate}
			</if>
			<if test="updateDate!=null">
				and update_date = #{updateDate}
			</if>
		</where>
	</select>
	
	<select id="searchDomainByConditionTrim" resultType="otg.bean.Domain">
		select * from domain
		<trim prefix="where" suffixOverrides="and">
			<if test="domainId!=null">
				domain_id=#{domainId} and
			</if>
			<if test="domainCode!=null and domainCode.trim()!=&quot;&quot;">
				domain_code=#{domainCode} and
			</if>
			<if test="domainName!=null and domainName.trim()!=&quot;&quot;">
				domain_name like #{domainName} and
			</if>
			<if test="addDate!=null">
				add_date = #{addDate} and
			</if>
			<if test="updateDate!=null">
				update_date = #{updateDate}
			</if>
		</trim>
	</select>
	
	
	<select id="searchDomainByConditionChoose" resultType="otg.bean.Domain">
		select * from domain where
		<where>
			<choose>
				<when test="domainId!=null">
					domain_id=#{domainId}
				</when>
				<when test="domainCode!=null and domainCode.trim()!=&quot;&quot;">
					domain_code=#{domainCode}
				</when>
				<when test="domainName!=null and domainName.trim()!=&quot;&quot;">
					domain_name like #{domainName}
				</when>
				<when test="addDate!=null">
					add_date = #{addDate}
				</when>
				<otherwise>
					update_date = #{updateDate}
				</otherwise>
			</choose>
		</where>
	</select>
	
	
	<update id="updateDomainBySet">
		update domain
		<set>
			<if test="domainCode!=null and domainCode.trim()!=&quot;&quot;">
				domain_code=#{domainCode}
			</if>
			<if test="domainName!=null and domainName.trim()!=&quot;&quot;">
				domain_name = #{domainName}
			</if>
		</set>
		update_date = #{updateDate}
		where  domain_id=#{domainId}
	</update>
	
	<select id="getDomainByConditionForEach" resultType="otg.bean.Domain">
		select * from domain where in in
		<foreach close=")" collection="idList" index="" item="singleId" open="(" separator=",">
		#{singleId}
		</foreach>
	</select>
	
	<!-- 
	&lt;insert id="addDomains"&gt;
		insert into domain(domain_code,domain_name,add_date,update_date)
		values
		&lt;foreach collection="domains"  item="domain" separator=","&gt;
			(#{domain.domainCode},#{domain.domainName},#{domain.add_date},#{domain.update_date})
		&lt;/foreach&gt;
	&lt;/insert&gt;
	 -->
	<insert id="addDomains">
		<foreach collection="domains" item="domain" separator=";">
			insert into domain(
				<include refid="insertColunm">
					<property name="testColumn" value="lql" />
				</include>
			)
			values (#{domain.domainCode},#{domain.domainName},#{domain.add_date},#{domain.update_date})
		</foreach>
	</insert>
	
	<!-- 
	&lt;insert id="addDomains" databaseId="oracle"&gt;
		#begin
		&lt;foreach collection="domains"  item="domain" separator=";"  open="begin" close="end;"&gt;
			insert into domain(domain_id,domain_code,domain_name,add_date,update_date)
			values (domain_sequence.nextval,#{domain.domainCode},#{domain.domainName},#{domain.add_date},#{domain.update_date});
		&lt;/foreach&gt;
		#end
	&lt;/insert&gt;
	 -->
	<insert databaseId="oracle" id="addDomains">
		insert into domain(domain_id,domain_code,domain_name,add_date,update_date)
			select domain_sequence.nextval,domain_code,domain_name,add_date,update_date from( 
			<foreach collection="domains" item="domain" separator="union">
				select #{domain.domainCode},#{domain.domainName},#{domain.add_date},#{domain.update_date} from dual
			</foreach>
		)
	</insert>
	
	
	<select id="searchDomainWithInnerParameter" resultType="otg.bean.Domain">
		<bind name="_domainName" value="'%'+domainName+'%'" />
		<if test="_databaseId=='oracle">
			select * from ora_domain
			<if test="_parameter!=null">
				where ora_domain.domain_name like #{_domainName}
			</if>
		</if>
		<if test="_databaseId=='mysql'">
			select * from domain
			<if test="_parameter!=null">
				where domain.domain_name like #{_domainName}
			</if>
		</if>
	</select>
	
	<sql id="insertColunm">
		<if test="_databaseId='mysql'">
			domain_code,domain_name,add_date,update_date,${testColumn}
		</if>
		<if test="_databaseId='oracle'">
			domain_code,domain_name,add_date,update_date
		</if>
	</sql>

</mapper>